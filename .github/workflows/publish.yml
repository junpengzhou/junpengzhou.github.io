name: npm publish

on:
  schedule:
    - cron: '0 16,4 * * *' # every day at midnight and noon（Use UTC time,China Standard Time is UTC:+8:00）
  push:
    branches:
      - develop # develop branch
      - main # default branch
  pull_request:
    branches:
      - develop # develop branch
      - main # default branch

jobs:
  pages:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          submodules: 'recursive'
      - name: Use Node.js 16.x
        uses: actions/setup-node@v3
        with:
          node-version: "16"
      - name: Install pandoc for mathjax
        run: |
          cd /tmp
          if [ type pandoc > /dev/null 2>&1 ]; then
            echo 'Already installed pandoc!'
          else
            if [ -f pandoc-3.1.6.1-1-amd64.deb ]; then
              echo 'Already downloaded pandoc!'
            else
              wget -cq https://github.com/jgm/pandoc/releases/download/3.1.6.1/pandoc-3.1.6.1-1-amd64.deb -O pandoc-3.1.6.1-1-amd64.deb
              echo 'Pandoc download successful!'
            fi
            sudo dpkg -i pandoc-3.1.6.1-1-amd64.deb
            pandoc --version
            echo 'Pandoc install successful!'
          fi
      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8
          run_install: false
      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV
      - name: Cache PNPM dependencies
        id: cache-pnpm
        uses: actions/cache@v3
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-
      - name: Install Dependencies
        if: ${{ steps.cache-pnpm.outputs.cache-hit != 'true' }}
        run: |
          pnpm install
          pnpm install --global gulp-cli
      - name: Build Dist and Index
        run: |
          pnpm run clean
          pnpm run spider
          pnpm run build
          pnpm run algolia
          gulp
      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./public
      - name: Deploy to Vercel
        run: |
          prodRun=""
          if [[ ${GITHUB_REF} == "refs/heads/main" ]]; then
            prodRun="--prod"
          fi

          npx vercel --token ${VERCEL_TOKEN} $prodRun
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
      # - name: Deploy to Server # 部署到自己的服务器上！
      #   uses: easingthemes/ssh-deploy@v2
      #   env:
      #     SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
      #     ARGS: "-rltgoDzvO --delete"
      #     EXCLUDE: ".well-known"
      #     SOURCE: "./public/*"
      #     REMOTE_HOST: ${{ secrets.SERVER_IP }}
      #     REMOTE_PORT: ${{ secrets.REMOTE_PORT }}
      #     REMOTE_USER: "你的用户名"
      #     TARGET: "你的服务器绝对路径"